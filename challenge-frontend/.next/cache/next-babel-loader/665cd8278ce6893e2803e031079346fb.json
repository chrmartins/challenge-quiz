{"ast":null,"code":"var _jsxFileName = \"/home/chrmartins/myprojects/challenge-questions/src/components/ListView/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport fetchGraphQl from '../../service/fetchGraphQl';\n\nfunction ViewQuestions() {\n  const {\n    0: listQuestions,\n    1: setListQuestions\n  } = useState([]);\n  const {\n    0: questionID,\n    1: setQuestionID\n  } = useState('');\n  const {\n    0: question,\n    1: setQuestion\n  } = useState('');\n  const {\n    0: reload,\n    1: setReload\n  } = useState(0); //Requisição ao servidor com graphql\n\n  useEffect(() => {\n    async function getQuestions() {\n      const query = await fetchGraphQl(`\n        query questions {\n          questions{\n            id\n            question\n            options\n            answerID\n          }\n        }\n      `);\n      const {\n        questions\n      } = query.data;\n      setListQuestions(questions);\n      console.log(questions);\n    }\n\n    getQuestions();\n  }, [reload]);\n\n  async function getQuestion(id) {\n    setQuestionID(id);\n    const query = await fetchGraphQl(`\n      query question($id: ID!) {\n        question (id: $id){\n          id\n          question\n          options\n          answerID\n        }\n      }\n    `, {\n      id: id\n    });\n\n    if (query.data) {\n      const {\n        question\n      } = query.data;\n      setQuestion(question.question);\n    }\n  }\n\n  async function deleteQuestion(id) {\n    console.log('deletar');\n    const query = await fetchGraphQl(`\n    mutation deleteQuestion($id: ID) {\n      deleteQuestion (\n        id: $id\n      ){\n        id\n      }\n    }\n  `, {\n      id: id\n    });\n\n    if (query.data) {\n      const {\n        deleteQuestion\n      } = query.data;\n\n      if (deleteQuestion === null) {\n        success('Questão excluída com sucesso.');\n      }\n    }\n  }\n\n  function success(text, ctrl = true) {\n    if (ctrl) {\n      alert(text);\n      setReload(reload + 1);\n      setQuestionID('1');\n    }\n\n    setQuestion('');\n    setOption1('');\n    setOption2('');\n    setOption3('');\n    setOption4('');\n    setAnswerID('');\n  }\n\n  return __jsx(\"div\", {\n    className: \"ViewQuestions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    id: \"list-question\",\n    className: \"box-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"Perguntas Cadastradas\"), __jsx(\"ul\", {\n    id: \"question-ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, listQuestions.map((quest, index) => __jsx(\"li\", {\n    key: quest.id,\n    className: index % 2 == 0 ? 'separator' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, ' ', __jsx(\"span\", {\n    className: \"question-ul-number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, index + 1), ' ', __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, quest.question.substring(0, 80)), ' '), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, __jsx(\"button\", {\n    className: \"btn-edit\",\n    onClick: () => getQuestion(quest.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"EDITAR\"), __jsx(\"button\", {\n    className: \"btn-del\",\n    onClick: () => deleteQuestion(quest.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, \"EXCLUIR\")))))));\n}\n\nexport default ViewQuestions;","map":{"version":3,"sources":["/home/chrmartins/myprojects/challenge-questions/src/components/ListView/index.tsx"],"names":["React","useEffect","useState","fetchGraphQl","ViewQuestions","listQuestions","setListQuestions","questionID","setQuestionID","question","setQuestion","reload","setReload","getQuestions","query","questions","data","console","log","getQuestion","id","deleteQuestion","success","text","ctrl","alert","setOption1","setOption2","setOption3","setOption4","setAnswerID","map","quest","index","substring"],"mappings":"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","sourcesContent":["﻿import React, { useEffect, useState, Suspense } from 'react'\nimport fetchGraphQl from '../../service/fetchGraphQl'\n\nfunction ViewQuestions() {\n  const [listQuestions, setListQuestions] = useState([])\n  const [questionID, setQuestionID] = useState('')\n\n  const [question, setQuestion] = useState('')\n\n  const [reload, setReload] = useState(0)\n\n  //Requisição ao servidor com graphql\n  useEffect(() => {\n    async function getQuestions() {\n      const query = await fetchGraphQl(`\n        query questions {\n          questions{\n            id\n            question\n            options\n            answerID\n          }\n        }\n      `)\n\n      const { questions } = query.data\n      setListQuestions(questions)\n\n      console.log(questions)\n    }\n\n    getQuestions()\n  }, [reload])\n\n  async function getQuestion(id) {\n    setQuestionID(id)\n\n    const query = await fetchGraphQl(\n      `\n      query question($id: ID!) {\n        question (id: $id){\n          id\n          question\n          options\n          answerID\n        }\n      }\n    `,\n      { id: id }\n    )\n\n    if (query.data) {\n      const { question } = query.data\n\n      setQuestion(question.question)\n      \n    }\n  }\n\n  async function deleteQuestion(id: string) {\n    console.log('deletar')\n\n    const query = await fetchGraphQl(\n      `\n    mutation deleteQuestion($id: ID) {\n      deleteQuestion (\n        id: $id\n      ){\n        id\n      }\n    }\n  `,\n      { id: id }\n    )\n\n    if (query.data) {\n      const { deleteQuestion } = query.data\n\n      if (deleteQuestion === null) {\n        success('Questão excluída com sucesso.')\n      }\n    }\n  }\n\n  function success(text, ctrl = true) {\n    if (ctrl) {\n      alert(text)\n      setReload(reload + 1)\n      setQuestionID('1')\n    }\n\n    setQuestion('')\n    setOption1('')\n    setOption2('')\n    setOption3('')\n    setOption4('')\n    setAnswerID('')\n  }\n\n  return (\n    <div className=\"ViewQuestions\">\n      <div id=\"list-question\" className=\"box-div\">\n        <h2>Perguntas Cadastradas</h2>\n        <ul id=\"question-ul\">\n          {listQuestions.map((quest, index) => (\n            <li key={quest.id} className={index % 2 == 0 ? 'separator' : ''}>\n              <div>\n                {' '}\n                <span className=\"question-ul-number\">{index + 1}</span>{' '}\n                <span>{quest.question.substring(0, 80)}</span>{' '}\n              </div>\n              <div>\n                <button\n                  className=\"btn-edit\"\n                  onClick={() => getQuestion(quest.id)}\n                >\n                  EDITAR\n                </button>\n                <button\n                  className=\"btn-del\"\n                  onClick={() => deleteQuestion(quest.id)}\n                >\n                  EXCLUIR\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default ViewQuestions\n"]},"metadata":{},"sourceType":"module"}