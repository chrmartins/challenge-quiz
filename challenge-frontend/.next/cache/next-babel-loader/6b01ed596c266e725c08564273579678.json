{"ast":null,"code":"var _jsxFileName = \"/home/chrmartins/myprojects/challenge-questions/src/components/FormRegister/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport fetchGraphQl from 'service/fetchGraphQl';\n\nfunction App(questionId) {\n  const {\n    0: questionID,\n    1: setQuestionID\n  } = useState('');\n  const {\n    0: question,\n    1: setQuestion\n  } = useState('');\n  const {\n    0: option1,\n    1: setOption1\n  } = useState('');\n  const {\n    0: option2,\n    1: setOption2\n  } = useState('');\n  const {\n    0: option3,\n    1: setOption3\n  } = useState('');\n  const {\n    0: option4,\n    1: setOption4\n  } = useState('');\n  const {\n    0: answerID,\n    1: setAnswerID\n  } = useState('1');\n  const {\n    0: reload,\n    1: setReload\n  } = useState(0);\n  useEffect(() => {}, []);\n\n  async function getQuestion(id) {\n    const query = await fetchGraphQl(`\n      query question($id: ID!) {\n        question (id: $id){\n          id\n          question\n          options\n          answerID\n        }\n      }\n    `, {\n      id: id\n    });\n\n    if (query.data) {\n      const {\n        question\n      } = query.data;\n      setQuestion(question.question);\n      console.log(question);\n    }\n  } //Requisição ao servidor com graphql\n\n\n  async function createQuestion(event) {\n    event.preventDefault();\n    const opt = [option1, option2, option3, option4];\n    const query = await fetchGraphQl(`\n    mutation createQuestion($question: String, $options: [String], $answerID: String) {\n      createQuestion (\n        question: $question\n        options: $options\n        answerID: $answerID\n      ){\n        id\n        question\n        options\n        answerID\n      }\n    }\n  `, {\n      question: question,\n      options: opt,\n      answerID: answerID + ''\n    });\n\n    if (query.data) {\n      success('Nova questão cadastrada com sucesso.');\n    }\n  }\n\n  async function updateQuestion(event) {\n    event.preventDefault();\n    const opt = [option1, option2, option3, option4];\n    const query = await fetchGraphQl(`\n    mutation updateQuestion($id: ID, $question: String, $options: [String], $answerID: String) {\n      updateQuestion (\n        id: $id\n        question: $question\n        options: $options\n        answerID: $answerID\n      ){\n        id\n        question\n        options\n        answerID\n      }\n    }\n  `, {\n      id: questionID,\n      question: question,\n      options: opt,\n      answerID: answerID + ''\n    });\n\n    if (query.data) {\n      success('Questão atualizada com sucesso.');\n    }\n  }\n\n  function success(text, ctrl = true) {\n    if (ctrl) {\n      alert(text);\n      setReload(reload + 1);\n      setQuestionID('1');\n    }\n\n    setQuestion('');\n    setOption1('');\n    setOption2('');\n    setOption3('');\n    setOption4('');\n    setAnswerID('');\n  }\n\n  function answerOpt(event) {\n    setAnswerID(event.target.value);\n  }\n\n  return __jsx(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    id: \"form-question\",\n    className: \"box-div\",\n    onSubmit: questionID === '' ? createQuestion : updateQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, questionID === '' ? 'Nova Pergunta' : 'Editar Pergunta'), __jsx(\"div\", {\n    id: \"question-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"questionInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Pergunta\"), __jsx(\"input\", {\n    required: true,\n    id: \"questionInput\",\n    type: \"text\",\n    value: question,\n    onChange: event => setQuestion(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  })), __jsx(\"ul\", {\n    id: \"question-ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"questionOption_1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"Resposta 1\"), __jsx(\"input\", {\n    required: true,\n    id: \"questionOption_1\",\n    type: \"text\",\n    value: option1,\n    onChange: event => setOption1(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  })), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"questionOption_2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"Resposta 2\"), __jsx(\"input\", {\n    required: true,\n    id: \"questionOption_2\",\n    type: \"text\",\n    value: option2,\n    onChange: event => setOption2(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  })), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"questionOption_3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, \"Resposta 3\"), __jsx(\"input\", {\n    required: true,\n    id: \"questionOption_3\",\n    type: \"text\",\n    value: option3,\n    onChange: event => setOption3(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  })), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"questionOption_4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, \"Resposta 4\"), __jsx(\"input\", {\n    required: true,\n    id: \"questionOption_4\",\n    type: \"text\",\n    value: option4,\n    onChange: event => setOption4(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, \"Resposta correta: \", answerID), __jsx(\"div\", {\n    id: \"question-answer\",\n    onChange: event => answerOpt(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    value: \"1\",\n    name: \"gender\",\n    checked: answerID === '1',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }), ' ', \"1\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    value: \"2\",\n    name: \"gender\",\n    checked: answerID === '2',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }), ' ', \"2\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    value: \"3\",\n    name: \"gender\",\n    checked: answerID === '3',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }), ' ', \"3\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    value: \"4\",\n    name: \"gender\",\n    checked: answerID === '4',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }), ' ', \"4\"))), __jsx(\"div\", {\n    id: \"question-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    onClick: () => success('', false),\n    className: \"btn-del\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, \"CANCELAR\"), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }, \"SALVAR\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/chrmartins/myprojects/challenge-questions/src/components/FormRegister/index.tsx"],"names":["React","useState","fetchGraphQl","App","questionId","questionID","setQuestionID","question","setQuestion","option1","setOption1","option2","setOption2","option3","setOption3","option4","setOption4","answerID","setAnswerID","reload","setReload","useEffect","getQuestion","id","query","data","console","log","createQuestion","event","preventDefault","opt","options","success","updateQuestion","text","ctrl","alert","answerOpt","target","value"],"mappings":"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","sourcesContent":["﻿import React, { useState } from 'react'\nimport fetchGraphQl from 'service/fetchGraphQl'\n\nfunction App(questionId) {\n  const [questionID, setQuestionID] = useState('')\n\n  const [question, setQuestion] = useState('')\n  const [option1, setOption1] = useState('')\n  const [option2, setOption2] = useState('')\n  const [option3, setOption3] = useState('')\n  const [option4, setOption4] = useState('')\n  const [answerID, setAnswerID] = useState('1')\n\n  const [reload, setReload] = useState(0)\n\n  useEffect(() => {\n\n  }, [])\n\n  async function getQuestion(id: string) {\n    const query = await fetchGraphQl(\n      `\n      query question($id: ID!) {\n        question (id: $id){\n          id\n          question\n          options\n          answerID\n        }\n      }\n    `,\n      { id: id }\n    )\n\n    if (query.data) {\n      const { question } = query.data\n\n      setQuestion(question.question)\n\n      console.log(question)\n    }\n  }\n\n  //Requisição ao servidor com graphql\n\n  async function createQuestion(event) {\n    event.preventDefault()\n\n    const opt = [option1, option2, option3, option4]\n    const query = await fetchGraphQl(\n      `\n    mutation createQuestion($question: String, $options: [String], $answerID: String) {\n      createQuestion (\n        question: $question\n        options: $options\n        answerID: $answerID\n      ){\n        id\n        question\n        options\n        answerID\n      }\n    }\n  `,\n      { question: question, options: opt, answerID: answerID + '' }\n    )\n\n    if (query.data) {\n      success('Nova questão cadastrada com sucesso.')\n    }\n  }\n\n  async function updateQuestion(event: Event) {\n    event.preventDefault()\n\n    const opt = [option1, option2, option3, option4]\n    const query = await fetchGraphQl(\n      `\n    mutation updateQuestion($id: ID, $question: String, $options: [String], $answerID: String) {\n      updateQuestion (\n        id: $id\n        question: $question\n        options: $options\n        answerID: $answerID\n      ){\n        id\n        question\n        options\n        answerID\n      }\n    }\n  `,\n      {\n        id: questionID,\n        question: question,\n        options: opt,\n        answerID: answerID + ''\n      }\n    )\n\n    if (query.data) {\n      success('Questão atualizada com sucesso.')\n    }\n  }\n\n  function success(text, ctrl = true) {\n    if (ctrl) {\n      alert(text)\n      setReload(reload + 1)\n      setQuestionID('1')\n    }\n\n    setQuestion('')\n    setOption1('')\n    setOption2('')\n    setOption3('')\n    setOption4('')\n    setAnswerID('')\n  }\n\n  function answerOpt(event) {\n    setAnswerID(event.target.value)\n  }\n\n  return (\n    <div className=\"App\">\n      <form\n        id=\"form-question\"\n        className=\"box-div\"\n        onSubmit={questionID === '' ? createQuestion : updateQuestion}\n      >\n        <h2>{questionID === '' ? 'Nova Pergunta' : 'Editar Pergunta'}</h2>\n\n        <div id=\"question-input\">\n          <label htmlFor=\"questionInput\">Pergunta</label>\n          <input\n            required\n            id=\"questionInput\"\n            type=\"text\"\n            value={question}\n            onChange={(event) => setQuestion(event.target.value)}\n          />\n        </div>\n\n        <ul id=\"question-ul\">\n          <li>\n            <label htmlFor=\"questionOption_1\">Resposta 1</label>\n            <input\n              required\n              id=\"questionOption_1\"\n              type=\"text\"\n              value={option1}\n              onChange={(event) => setOption1(event.target.value)}\n            />\n          </li>\n\n          <li>\n            <label htmlFor=\"questionOption_2\">Resposta 2</label>\n            <input\n              required\n              id=\"questionOption_2\"\n              type=\"text\"\n              value={option2}\n              onChange={(event) => setOption2(event.target.value)}\n            />\n          </li>\n\n          <li>\n            <label htmlFor=\"questionOption_3\">Resposta 3</label>\n            <input\n              required\n              id=\"questionOption_3\"\n              type=\"text\"\n              value={option3}\n              onChange={(event) => setOption3(event.target.value)}\n            />\n          </li>\n\n          <li>\n            <label htmlFor=\"questionOption_4\">Resposta 4</label>\n            <input\n              required\n              id=\"questionOption_4\"\n              type=\"text\"\n              value={option4}\n              onChange={(event) => setOption4(event.target.value)}\n            />\n          </li>\n        </ul>\n\n        <div>\n          <label htmlFor=\"\">Resposta correta: {answerID}</label>\n          <div id=\"question-answer\" onChange={(event) => answerOpt(event)}>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"1\"\n                name=\"gender\"\n                checked={answerID === '1'}\n              />{' '}\n              1\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"2\"\n                name=\"gender\"\n                checked={answerID === '2'}\n              />{' '}\n              2\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"3\"\n                name=\"gender\"\n                checked={answerID === '3'}\n              />{' '}\n              3\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"4\"\n                name=\"gender\"\n                checked={answerID === '4'}\n              />{' '}\n              4\n            </div>\n          </div>\n        </div>\n\n        <div id=\"question-footer\">\n          <button\n            type=\"button\"\n            onClick={() => success('', false)}\n            className=\"btn-del\"\n          >\n            CANCELAR\n          </button>\n\n          <button type=\"submit\" className=\"btn-edit\">\n            SALVAR\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}