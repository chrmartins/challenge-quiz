{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport fetchGraphQl from '../../service/fetchGraphQl';\n\nfunction ViewQuestions() {\n  const {\n    0: listQuestions,\n    1: setListQuestions\n  } = useState([]);\n  const {\n    0: questionID,\n    1: setQuestionID\n  } = useState('');\n  const {\n    0: question,\n    1: setQuestion\n  } = useState('');\n  const {\n    0: reload,\n    1: setReload\n  } = useState(0); //Requisição ao servidor com graphql\n\n  useEffect(() => {\n    async function getQuestions() {\n      const query = await fetchGraphQl(`\n        query questions {\n          questions{\n            id\n            question\n            options\n            answerID\n          }\n        }\n      `);\n      const {\n        questions\n      } = query.data;\n      setListQuestions(questions);\n      console.log(questions);\n    }\n\n    getQuestions();\n  }, [reload]);\n\n  async function getQuestion(id) {\n    setQuestionID(id);\n    const query = await fetchGraphQl(`\n      query question($id: ID!) {\n        question (id: $id){\n          id\n          question\n          options\n          answerID\n        }\n      }\n    `, {\n      id: id\n    });\n\n    if (query.data) {\n      const {\n        question\n      } = query.data;\n      setQuestion(question.question);\n    }\n  }\n\n  async function deleteQuestion(id) {\n    console.log('deletar');\n    const query = await fetchGraphQl(`\n    mutation deleteQuestion($id: ID) {\n      deleteQuestion (\n        id: $id\n      ){\n        id\n      }\n    }\n  `, {\n      id: id\n    });\n\n    if (query.data) {\n      const {\n        deleteQuestion\n      } = query.data;\n\n      if (deleteQuestion === null) {\n        success('Questão excluída com sucesso.');\n      }\n    }\n  }\n\n  function success(text, ctrl = true) {\n    if (ctrl) {\n      alert(text);\n      setReload(reload + 1);\n      setQuestionID('1');\n    }\n\n    setQuestion('');\n  }\n\n  return __jsx(\"div\", {\n    className: \"ViewQuestions\"\n  }, __jsx(\"div\", {\n    id: \"list-question\",\n    className: \"box-div\"\n  }, __jsx(\"h2\", null, \"Perguntas Cadastradas\"), __jsx(\"ul\", {\n    id: \"question-ul\"\n  }, listQuestions.map((quest, index) => __jsx(\"li\", {\n    key: quest.id,\n    className: index % 2 == 0 ? 'separator' : ''\n  }, __jsx(\"div\", null, ' ', __jsx(\"span\", {\n    className: \"question-ul-number\"\n  }, index + 1), ' ', __jsx(\"span\", null, quest.question.substring(0, 80)), ' '), __jsx(\"div\", null, __jsx(\"button\", {\n    className: \"btn-edit\",\n    onClick: () => getQuestion(quest.id)\n  }, \"EDITAR\"), __jsx(\"button\", {\n    className: \"btn-del\",\n    onClick: () => deleteQuestion(quest.id)\n  }, \"EXCLUIR\")))))));\n}\n\nexport default ViewQuestions;","map":null,"metadata":{},"sourceType":"module"}