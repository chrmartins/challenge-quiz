{"ast":null,"code":"var _jsxFileName = \"/home/chrmartins/myprojects/challenge-questions/src/components/FormRegister/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport fetchGraphQl from 'service/fetchGraphQl';\nimport Router from 'next/router';\nimport * as S from './styles';\nimport Link from 'next/link';\n\nfunction App({\n  questionId\n}) {\n  const {\n    0: questionID,\n    1: setQuestionID\n  } = useState(questionId || '');\n  const {\n    0: question,\n    1: setQuestion\n  } = useState('');\n  const {\n    0: option1,\n    1: setOption1\n  } = useState('');\n  const {\n    0: option2,\n    1: setOption2\n  } = useState('');\n  const {\n    0: option3,\n    1: setOption3\n  } = useState('');\n  const {\n    0: option4,\n    1: setOption4\n  } = useState('');\n  const {\n    0: answerID,\n    1: setAnswerID\n  } = useState('1');\n  const {\n    0: reload,\n    1: setReload\n  } = useState(0);\n  useEffect(() => {\n    if (questionId !== undefined) {\n      getQuestion(questionId);\n    }\n  }, [questionId]);\n\n  async function getQuestion(id) {\n    const query = await fetchGraphQl(`\n      query question($id: ID!) {\n        question (id: $id){\n          id\n          question\n          options\n          answerID\n        }\n      }\n    `, {\n      id: id\n    });\n\n    if (query.data.question) {\n      const {\n        question\n      } = query.data;\n      console.log(question);\n      setQuestion(question.question);\n      setQuestionID(question.id);\n      setAnswerID(question.answerID);\n      setOption1(question.options[0]);\n      setOption2(question.options[1]);\n      setOption3(question.options[2]);\n      setOption4(question.options[3]);\n    }\n  } //Requisição ao servidor com graphql\n\n\n  async function createQuestion(event) {\n    event.preventDefault();\n    const opt = [option1, option2, option3, option4];\n    const query = await fetchGraphQl(`\n    mutation createQuestion($question: String, $options: [String], $answerID: String) {\n      createQuestion (\n        question: $question\n        options: $options\n        answerID: $answerID\n      ){\n        id\n        question\n        options\n        answerID\n      }\n    }\n  `, {\n      question: question,\n      options: opt,\n      answerID: answerID + ''\n    });\n\n    if (query.data) {\n      Router.push('/viewlist');\n    }\n  }\n\n  async function updateQuestion(event) {\n    event.preventDefault();\n    console.log(answerID);\n    const opt = [option1, option2, option3, option4];\n    const query = await fetchGraphQl(`\n    mutation updateQuestion($id: ID, $question: String, $options: [String], $answerID: String) {\n      updateQuestion (\n        id: $id\n        question: $question\n        options: $options\n        answerID: $answerID\n      ){\n        id\n        question\n        options\n        answerID\n      }\n    }\n  `, {\n      id: questionID,\n      question: question,\n      options: opt,\n      answerID: answerID + ''\n    });\n\n    if (query.data) {\n      Router.push('/viewlist');\n    }\n  }\n\n  function success(text, ctrl = true) {\n    if (ctrl) {\n      alert(text);\n      setReload(reload + 1);\n      setQuestionID('1');\n    }\n\n    setQuestion('');\n    setOption1('');\n    setOption2('');\n    setOption3('');\n    setOption4('');\n    setAnswerID('');\n  }\n\n  function answerOpt(event) {\n    setAnswerID(event.target.value);\n  }\n\n  return __jsx(S.Wrapper, {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, __jsx(\"i\", {\n    className: \"cis-arrow-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  })), __jsx(\"form\", {\n    id: \"form-question\",\n    className: \"box-div\",\n    onSubmit: questionID === '' ? createQuestion : updateQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, questionID === '' ? 'Nova Pergunta' : 'Editar Pergunta'), __jsx(\"ul\", {\n    id: \"question-ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, __jsx(\"li\", {\n    id: \"question-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    placeholder: \"Escreva sua pergunta\",\n    required: true,\n    id: \"questionInput\",\n    type: \"text\",\n    value: question,\n    onChange: event => setQuestion(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  })), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    placeholder: \"Resposta 1\",\n    required: true,\n    id: \"questionOption_1\",\n    type: \"text\",\n    value: option1,\n    onChange: event => setOption1(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  })), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    placeholder: \"Resposta 2\",\n    required: true,\n    id: \"questionOption_2\",\n    type: \"text\",\n    value: option2,\n    onChange: event => setOption2(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  })), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    placeholder: \"Resposta 3\",\n    required: true,\n    id: \"questionOption_3\",\n    type: \"text\",\n    value: option3,\n    onChange: event => setOption3(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  })), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    placeholder: \"Resposta 4\",\n    required: true,\n    id: \"questionOption_4\",\n    type: \"text\",\n    value: option4,\n    onChange: event => setOption4(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }))), __jsx(S.AnswerWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    className: \"correct\",\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, \"Resposta correta: \", answerID), __jsx(S.OptionWrapper, {\n    id: \"question-answer\",\n    onChange: event => answerOpt(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, __jsx(S.OptionInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }, \"Op\\xE7\\xE3o 1\"), __jsx(\"input\", {\n    type: \"radio\",\n    value: \"1\",\n    name: \"answerID\",\n    checked: answerID === '1',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  })), __jsx(S.OptionInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }, \"Op\\xE7\\xE3o 2\"), __jsx(\"input\", {\n    type: \"radio\",\n    value: \"2\",\n    name: \"answerID\",\n    checked: answerID === '2',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  })), __jsx(S.OptionInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }, \"Op\\xE7\\xE3o 3\"), __jsx(\"input\", {\n    type: \"radio\",\n    value: \"3\",\n    name: \"answerID\",\n    checked: answerID === '3',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  })), __jsx(S.OptionInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, \"Op\\xE7\\xE3o 4\"), __jsx(\"input\", {\n    type: \"radio\",\n    value: \"4\",\n    name: \"answerID\",\n    checked: answerID === '4',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  })))), __jsx(\"div\", {\n    id: \"question-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }\n  }, __jsx(S.Button, {\n    type: \"button\",\n    onClick: () => success('', false),\n    className: \"btn-del\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }, \"CANCELAR\"), __jsx(S.Button, {\n    type: \"submit\",\n    className: \"btn-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }, \"SALVAR\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/chrmartins/myprojects/challenge-questions/src/components/FormRegister/index.tsx"],"names":["React","useState","useEffect","fetchGraphQl","Router","S","Link","App","questionId","questionID","setQuestionID","question","setQuestion","option1","setOption1","option2","setOption2","option3","setOption3","option4","setOption4","answerID","setAnswerID","reload","setReload","undefined","getQuestion","id","query","data","console","log","options","createQuestion","event","preventDefault","opt","push","updateQuestion","success","text","ctrl","alert","answerOpt","target","value"],"mappings":"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","sourcesContent":["﻿import React, { useState, useEffect } from 'react'\nimport fetchGraphQl from 'service/fetchGraphQl'\nimport Router from 'next/router'\n\nimport * as S from './styles'\nimport { lstat } from 'fs'\n\nimport Link from 'next/link'\n\nfunction App({ questionId }) {\n  const [questionID, setQuestionID] = useState(questionId || '')\n\n  const [question, setQuestion] = useState('')\n  const [option1, setOption1] = useState('')\n  const [option2, setOption2] = useState('')\n  const [option3, setOption3] = useState('')\n  const [option4, setOption4] = useState('')\n  const [answerID, setAnswerID] = useState('1')\n\n  const [reload, setReload] = useState(0)\n\n  useEffect(() => {\n    if (questionId !== undefined) {\n      getQuestion(questionId)\n    }\n  }, [questionId])\n\n  async function getQuestion(id: string) {\n    const query = await fetchGraphQl(\n      `\n      query question($id: ID!) {\n        question (id: $id){\n          id\n          question\n          options\n          answerID\n        }\n      }\n    `,\n      { id: id }\n    )\n\n    if (query.data.question) {\n      const { question } = query.data\n      console.log(question)\n      setQuestion(question.question)\n      setQuestionID(question.id)\n      setAnswerID(question.answerID)\n      setOption1(question.options[0])\n      setOption2(question.options[1])\n      setOption3(question.options[2])\n      setOption4(question.options[3])\n    }\n  }\n\n  //Requisição ao servidor com graphql\n\n  async function createQuestion(event) {\n    event.preventDefault()\n\n    const opt = [option1, option2, option3, option4]\n    const query = await fetchGraphQl(\n      `\n    mutation createQuestion($question: String, $options: [String], $answerID: String) {\n      createQuestion (\n        question: $question\n        options: $options\n        answerID: $answerID\n      ){\n        id\n        question\n        options\n        answerID\n      }\n    }\n  `,\n      { question: question, options: opt, answerID: answerID + '' }\n    )\n\n    if (query.data) {\n      Router.push('/viewlist')\n    }\n  }\n\n  async function updateQuestion(event: Event) {\n    event.preventDefault()\n    console.log(answerID)\n    const opt = [option1, option2, option3, option4]\n    const query = await fetchGraphQl(\n      `\n    mutation updateQuestion($id: ID, $question: String, $options: [String], $answerID: String) {\n      updateQuestion (\n        id: $id\n        question: $question\n        options: $options\n        answerID: $answerID\n      ){\n        id\n        question\n        options\n        answerID\n      }\n    }\n  `,\n      {\n        id: questionID,\n        question: question,\n        options: opt,\n        answerID: answerID + ''\n      }\n    )\n\n    if (query.data) {\n      Router.push('/viewlist')\n    }\n  }\n\n  function success(text, ctrl = true) {\n    if (ctrl) {\n      alert(text)\n      setReload(reload + 1)\n      setQuestionID('1')\n    }\n\n    setQuestion('')\n    setOption1('')\n    setOption2('')\n    setOption3('')\n    setOption4('')\n    setAnswerID('')\n  }\n\n  function answerOpt(event) {\n    setAnswerID(event.target.value)\n  }\n\n  return (\n    <S.Wrapper className=\"App\">\n      <Link href=\"/\">\n        <i className=\"cis-arrow-left\"></i>\n      </Link>\n      <form\n        id=\"form-question\"\n        className=\"box-div\"\n        onSubmit={questionID === '' ? createQuestion : updateQuestion}\n      >\n        <h2>{questionID === '' ? 'Nova Pergunta' : 'Editar Pergunta'}</h2>\n\n        <ul id=\"question-ul\">\n          <li id=\"question-input\">\n            <input\n              placeholder=\"Escreva sua pergunta\"\n              required\n              id=\"questionInput\"\n              type=\"text\"\n              value={question}\n              onChange={(event) => setQuestion(event.target.value)}\n            />\n          </li>\n          <li>\n            <input\n              placeholder=\"Resposta 1\"\n              required\n              id=\"questionOption_1\"\n              type=\"text\"\n              value={option1}\n              onChange={(event) => setOption1(event.target.value)}\n            />\n          </li>\n\n          <li>\n            <input\n              placeholder=\"Resposta 2\"\n              required\n              id=\"questionOption_2\"\n              type=\"text\"\n              value={option2}\n              onChange={(event) => setOption2(event.target.value)}\n            />\n          </li>\n\n          <li>\n            <input\n              placeholder=\"Resposta 3\"\n              required\n              id=\"questionOption_3\"\n              type=\"text\"\n              value={option3}\n              onChange={(event) => setOption3(event.target.value)}\n            />\n          </li>\n\n          <li>\n            <input\n              placeholder=\"Resposta 4\"\n              required\n              id=\"questionOption_4\"\n              type=\"text\"\n              value={option4}\n              onChange={(event) => setOption4(event.target.value)}\n            />\n          </li>\n        </ul>\n\n        <S.AnswerWrapper>\n          <label className=\"correct\" htmlFor=\"\">\n            Resposta correta: {answerID}\n          </label>\n          <S.OptionWrapper\n            id=\"question-answer\"\n            onChange={(event) => answerOpt(event)}\n          >\n            <S.OptionInput>\n              <label htmlFor=\"radio\">Opção 1</label>\n              <input\n                type=\"radio\"\n                value=\"1\"\n                name=\"answerID\"\n                checked={answerID === '1'}\n              />\n            </S.OptionInput>\n            <S.OptionInput>\n              <label htmlFor=\"radio\">Opção 2</label>\n              <input\n                type=\"radio\"\n                value=\"2\"\n                name=\"answerID\"\n                checked={answerID === '2'}\n              />\n            </S.OptionInput>\n            <S.OptionInput>\n              <label htmlFor=\"radio\">Opção 3</label>\n              <input\n                type=\"radio\"\n                value=\"3\"\n                name=\"answerID\"\n                checked={answerID === '3'}\n              />\n            </S.OptionInput>\n            <S.OptionInput>\n              <label htmlFor=\"radio\">Opção 4</label>\n              <input\n                type=\"radio\"\n                value=\"4\"\n                name=\"answerID\"\n                checked={answerID === '4'}\n              />\n            </S.OptionInput>\n          </S.OptionWrapper>\n        </S.AnswerWrapper>\n\n        <div id=\"question-footer\">\n          <S.Button\n            type=\"button\"\n            onClick={() => success('', false)}\n            className=\"btn-del\"\n          >\n            CANCELAR\n          </S.Button>\n\n          <S.Button type=\"submit\" className=\"btn-edit\">\n            SALVAR\n          </S.Button>\n        </div>\n      </form>\n    </S.Wrapper>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}