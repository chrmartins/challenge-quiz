{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/chrmartins/myprojects/challenge-questions/src/components/FormRegister/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport fetchGraphQl from 'service/fetchGraphQl';\n\nfunction App(questionId) {\n  _s();\n\n  var _useState = useState(''),\n      questionID = _useState[0],\n      setQuestionID = _useState[1];\n\n  var _useState2 = useState(''),\n      question = _useState2[0],\n      setQuestion = _useState2[1];\n\n  var _useState3 = useState(''),\n      option1 = _useState3[0],\n      setOption1 = _useState3[1];\n\n  var _useState4 = useState(''),\n      option2 = _useState4[0],\n      setOption2 = _useState4[1];\n\n  var _useState5 = useState(''),\n      option3 = _useState5[0],\n      setOption3 = _useState5[1];\n\n  var _useState6 = useState(''),\n      option4 = _useState6[0],\n      setOption4 = _useState6[1];\n\n  var _useState7 = useState('1'),\n      answerID = _useState7[0],\n      setAnswerID = _useState7[1];\n\n  var _useState8 = useState(0),\n      reload = _useState8[0],\n      setReload = _useState8[1];\n\n  useEffect(function () {});\n\n  function getQuestion(_x) {\n    return _getQuestion.apply(this, arguments);\n  } //Requisição ao servidor com graphql\n\n\n  function _getQuestion() {\n    _getQuestion = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n      var query, _question;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetchGraphQl(\"\\n      query question($id: ID!) {\\n        question (id: $id){\\n          id\\n          question\\n          options\\n          answerID\\n        }\\n      }\\n    \", {\n                id: id\n              });\n\n            case 2:\n              query = _context.sent;\n\n              if (query.data) {\n                _question = query.data.question;\n                setQuestion(_question.question);\n                console.log(_question);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getQuestion.apply(this, arguments);\n  }\n\n  function createQuestion(_x2) {\n    return _createQuestion.apply(this, arguments);\n  }\n\n  function _createQuestion() {\n    _createQuestion = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n      var opt, query;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event.preventDefault();\n              opt = [option1, option2, option3, option4];\n              _context2.next = 4;\n              return fetchGraphQl(\"\\n    mutation createQuestion($question: String, $options: [String], $answerID: String) {\\n      createQuestion (\\n        question: $question\\n        options: $options\\n        answerID: $answerID\\n      ){\\n        id\\n        question\\n        options\\n        answerID\\n      }\\n    }\\n  \", {\n                question: question,\n                options: opt,\n                answerID: answerID + ''\n              });\n\n            case 4:\n              query = _context2.sent;\n\n              if (query.data) {\n                success('Nova questão cadastrada com sucesso.');\n              }\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _createQuestion.apply(this, arguments);\n  }\n\n  function updateQuestion(_x3) {\n    return _updateQuestion.apply(this, arguments);\n  }\n\n  function _updateQuestion() {\n    _updateQuestion = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n      var opt, query;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              event.preventDefault();\n              opt = [option1, option2, option3, option4];\n              _context3.next = 4;\n              return fetchGraphQl(\"\\n    mutation updateQuestion($id: ID, $question: String, $options: [String], $answerID: String) {\\n      updateQuestion (\\n        id: $id\\n        question: $question\\n        options: $options\\n        answerID: $answerID\\n      ){\\n        id\\n        question\\n        options\\n        answerID\\n      }\\n    }\\n  \", {\n                id: questionID,\n                question: question,\n                options: opt,\n                answerID: answerID + ''\n              });\n\n            case 4:\n              query = _context3.sent;\n\n              if (query.data) {\n                success('Questão atualizada com sucesso.');\n              }\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _updateQuestion.apply(this, arguments);\n  }\n\n  function success(text) {\n    var ctrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (ctrl) {\n      alert(text);\n      setReload(reload + 1);\n      setQuestionID('1');\n    }\n\n    setQuestion('');\n    setOption1('');\n    setOption2('');\n    setOption3('');\n    setOption4('');\n    setAnswerID('');\n  }\n\n  function answerOpt(event) {\n    setAnswerID(event.target.value);\n  }\n\n  return __jsx(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    id: \"form-question\",\n    className: \"box-div\",\n    onSubmit: questionID === '' ? createQuestion : updateQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, questionID === '' ? 'Nova Pergunta' : 'Editar Pergunta'), __jsx(\"div\", {\n    id: \"question-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"questionInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Pergunta\"), __jsx(\"input\", {\n    required: true,\n    id: \"questionInput\",\n    type: \"text\",\n    value: question,\n    onChange: function onChange(event) {\n      return setQuestion(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  })), __jsx(\"ul\", {\n    id: \"question-ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"questionOption_1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"Resposta 1\"), __jsx(\"input\", {\n    required: true,\n    id: \"questionOption_1\",\n    type: \"text\",\n    value: option1,\n    onChange: function onChange(event) {\n      return setOption1(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  })), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"questionOption_2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"Resposta 2\"), __jsx(\"input\", {\n    required: true,\n    id: \"questionOption_2\",\n    type: \"text\",\n    value: option2,\n    onChange: function onChange(event) {\n      return setOption2(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  })), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"questionOption_3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, \"Resposta 3\"), __jsx(\"input\", {\n    required: true,\n    id: \"questionOption_3\",\n    type: \"text\",\n    value: option3,\n    onChange: function onChange(event) {\n      return setOption3(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  })), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"questionOption_4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, \"Resposta 4\"), __jsx(\"input\", {\n    required: true,\n    id: \"questionOption_4\",\n    type: \"text\",\n    value: option4,\n    onChange: function onChange(event) {\n      return setOption4(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, \"Resposta correta: \", answerID), __jsx(\"div\", {\n    id: \"question-answer\",\n    onChange: function onChange(event) {\n      return answerOpt(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    value: \"1\",\n    name: \"gender\",\n    checked: answerID === '1',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }), ' ', \"1\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    value: \"2\",\n    name: \"gender\",\n    checked: answerID === '2',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }), ' ', \"2\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    value: \"3\",\n    name: \"gender\",\n    checked: answerID === '3',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }), ' ', \"3\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    value: \"4\",\n    name: \"gender\",\n    checked: answerID === '4',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }), ' ', \"4\"))), __jsx(\"div\", {\n    id: \"question-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return success('', false);\n    },\n    className: \"btn-del\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, \"CANCELAR\"), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }, \"SALVAR\"))));\n}\n\n_s(App, \"Cup9ID6k1YTJd7UIqjTyN0Ddvt4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/chrmartins/myprojects/challenge-questions/src/components/FormRegister/index.tsx"],"names":["React","useState","fetchGraphQl","App","questionId","questionID","setQuestionID","question","setQuestion","option1","setOption1","option2","setOption2","option3","setOption3","option4","setOption4","answerID","setAnswerID","reload","setReload","useEffect","getQuestion","id","query","data","console","log","createQuestion","event","preventDefault","opt","options","success","updateQuestion","text","ctrl","alert","answerOpt","target","value"],"mappings":"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","sourcesContent":["﻿import React, { useState } from 'react'\nimport fetchGraphQl from 'service/fetchGraphQl'\n\nfunction App(questionId) {\n  const [questionID, setQuestionID] = useState('')\n\n  const [question, setQuestion] = useState('')\n  const [option1, setOption1] = useState('')\n  const [option2, setOption2] = useState('')\n  const [option3, setOption3] = useState('')\n  const [option4, setOption4] = useState('')\n  const [answerID, setAnswerID] = useState('1')\n\n  const [reload, setReload] = useState(0)\n\n  useEffect(() => {\n\n  },)\n\n  async function getQuestion(id: string) {\n    const query = await fetchGraphQl(\n      `\n      query question($id: ID!) {\n        question (id: $id){\n          id\n          question\n          options\n          answerID\n        }\n      }\n    `,\n      { id: id }\n    )\n\n    if (query.data) {\n      const { question } = query.data\n\n      setQuestion(question.question)\n\n      console.log(question)\n    }\n  }\n\n  //Requisição ao servidor com graphql\n\n  async function createQuestion(event) {\n    event.preventDefault()\n\n    const opt = [option1, option2, option3, option4]\n    const query = await fetchGraphQl(\n      `\n    mutation createQuestion($question: String, $options: [String], $answerID: String) {\n      createQuestion (\n        question: $question\n        options: $options\n        answerID: $answerID\n      ){\n        id\n        question\n        options\n        answerID\n      }\n    }\n  `,\n      { question: question, options: opt, answerID: answerID + '' }\n    )\n\n    if (query.data) {\n      success('Nova questão cadastrada com sucesso.')\n    }\n  }\n\n  async function updateQuestion(event: Event) {\n    event.preventDefault()\n\n    const opt = [option1, option2, option3, option4]\n    const query = await fetchGraphQl(\n      `\n    mutation updateQuestion($id: ID, $question: String, $options: [String], $answerID: String) {\n      updateQuestion (\n        id: $id\n        question: $question\n        options: $options\n        answerID: $answerID\n      ){\n        id\n        question\n        options\n        answerID\n      }\n    }\n  `,\n      {\n        id: questionID,\n        question: question,\n        options: opt,\n        answerID: answerID + ''\n      }\n    )\n\n    if (query.data) {\n      success('Questão atualizada com sucesso.')\n    }\n  }\n\n  function success(text, ctrl = true) {\n    if (ctrl) {\n      alert(text)\n      setReload(reload + 1)\n      setQuestionID('1')\n    }\n\n    setQuestion('')\n    setOption1('')\n    setOption2('')\n    setOption3('')\n    setOption4('')\n    setAnswerID('')\n  }\n\n  function answerOpt(event) {\n    setAnswerID(event.target.value)\n  }\n\n  return (\n    <div className=\"App\">\n      <form\n        id=\"form-question\"\n        className=\"box-div\"\n        onSubmit={questionID === '' ? createQuestion : updateQuestion}\n      >\n        <h2>{questionID === '' ? 'Nova Pergunta' : 'Editar Pergunta'}</h2>\n\n        <div id=\"question-input\">\n          <label htmlFor=\"questionInput\">Pergunta</label>\n          <input\n            required\n            id=\"questionInput\"\n            type=\"text\"\n            value={question}\n            onChange={(event) => setQuestion(event.target.value)}\n          />\n        </div>\n\n        <ul id=\"question-ul\">\n          <li>\n            <label htmlFor=\"questionOption_1\">Resposta 1</label>\n            <input\n              required\n              id=\"questionOption_1\"\n              type=\"text\"\n              value={option1}\n              onChange={(event) => setOption1(event.target.value)}\n            />\n          </li>\n\n          <li>\n            <label htmlFor=\"questionOption_2\">Resposta 2</label>\n            <input\n              required\n              id=\"questionOption_2\"\n              type=\"text\"\n              value={option2}\n              onChange={(event) => setOption2(event.target.value)}\n            />\n          </li>\n\n          <li>\n            <label htmlFor=\"questionOption_3\">Resposta 3</label>\n            <input\n              required\n              id=\"questionOption_3\"\n              type=\"text\"\n              value={option3}\n              onChange={(event) => setOption3(event.target.value)}\n            />\n          </li>\n\n          <li>\n            <label htmlFor=\"questionOption_4\">Resposta 4</label>\n            <input\n              required\n              id=\"questionOption_4\"\n              type=\"text\"\n              value={option4}\n              onChange={(event) => setOption4(event.target.value)}\n            />\n          </li>\n        </ul>\n\n        <div>\n          <label htmlFor=\"\">Resposta correta: {answerID}</label>\n          <div id=\"question-answer\" onChange={(event) => answerOpt(event)}>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"1\"\n                name=\"gender\"\n                checked={answerID === '1'}\n              />{' '}\n              1\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"2\"\n                name=\"gender\"\n                checked={answerID === '2'}\n              />{' '}\n              2\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"3\"\n                name=\"gender\"\n                checked={answerID === '3'}\n              />{' '}\n              3\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"4\"\n                name=\"gender\"\n                checked={answerID === '4'}\n              />{' '}\n              4\n            </div>\n          </div>\n        </div>\n\n        <div id=\"question-footer\">\n          <button\n            type=\"button\"\n            onClick={() => success('', false)}\n            className=\"btn-del\"\n          >\n            CANCELAR\n          </button>\n\n          <button type=\"submit\" className=\"btn-edit\">\n            SALVAR\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}